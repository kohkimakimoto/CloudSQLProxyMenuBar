#!/usr/bin/env python
# coding:utf-8
from __future__ import division, print_function, absolute_import, unicode_literals
import argparse, os, sys, re, subprocess, textwrap, shutil, tempfile, grp, datetime

# utilities for compatibility.
PY2 = sys.version_info[0] == 2
PY3 = sys.version_info[0] == 3

if PY2:
  input = raw_input
  def as_bytes(s, encoding='utf-8'):
    if isinstance(s, str):
      return s
    else:
      return s.encode(encoding)

  def as_string(s, encoding='utf-8'):
    if isinstance(s, unicode):
      return s
    else:
      return s.decode(encoding)
else:
  input = input
  def as_bytes(s, encoding='utf8'):
    if isinstance(s, bytes):
      return s
    else:
      return s.encode(encoding)

  def as_string(s, encoding='utf8'):
    if isinstance(s, str):
      return s
    else:
      return s.decode(encoding)

def shell_escape(s):
  return "'" + s.replace("'", "'\"'\"'") + "'"

def main():
  parser = argparse.ArgumentParser(
    description="Build a macOS Application bundle",
    formatter_class=argparse.RawDescriptionHelpFormatter
  )
  args = parser.parse_args()

  repoDir = os.path.dirname(os.path.abspath(__file__))
  distDir = os.path.join(repoDir, "dist")

  # clean the dist directory at first
  if os.path.exists(distDir):
    shutil.rmtree(distDir)

  os.mkdir(distDir)
  os.mkdir(os.path.join(distDir, "CloudSQLProxyMenuBar.app"))
  os.mkdir(os.path.join(distDir, "CloudSQLProxyMenuBar.app", "Contents"))
  os.mkdir(os.path.join(distDir, "CloudSQLProxyMenuBar.app", "Contents", "MacOS"))
  os.mkdir(os.path.join(distDir, "CloudSQLProxyMenuBar.app", "Contents", "Resources"))
  shutil.copyfile(
    os.path.join(repoDir, "res", "icon", "CloudSQLProxyMenuBar.icns"),
    os.path.join(distDir, "CloudSQLProxyMenuBar.app", "Contents", "Resources", "CloudSQLProxyMenuBar.icns")
  )
  shutil.copytree(
    os.path.join(repoDir, "res", "bin"),
    os.path.join(distDir, "CloudSQLProxyMenuBar.app", "Contents", "Resources", "bin")
  )

  with open(os.path.join(distDir, "CloudSQLProxyMenuBar.app", "Contents", "Info.plist"), 'w') as f:
    f.write(textwrap.dedent('''\
        <?xml version="1.0" encoding="UTF-8"?>
        <!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
        <plist version="1.0">
          <dict>
            <key>CFBundleDevelopmentRegion</key>
            <string>English</string>
            <key>CFBundleExecutable</key>
            <string>cloudsqlproxymenubar</string>
            <key>CFBundleIconFile</key>
            <string>CloudSQLProxyMenuBar</string>
            <key>CFBundleIdentifier</key>
            <string>dev.kohkimakimoto.CloudSQLProxyMenuBar</string>
            <key>CFBundleName</key>
            <string>CloudSQLProxyMenuBar</string>
            <key>CFBundlePackageType</key>
            <string>APPL</string>
            <key>CFBundleVersion</key>
            <string>0.2.0</string>
            <key>NSHighResolutionCapable</key>
            <string>True</string>
            <key>LSUIElement</key>
            <string>1</string>
          </dict>
        </plist>
    '''))

  executableFile = os.path.join(distDir, "CloudSQLProxyMenuBar.app", "Contents", "MacOS", "cloudsqlproxymenubar")
  subprocess.check_call("go build -ldflags=-w -o=%s ." % (executableFile),  shell=True)

  # see https://github.com/LinusU/node-appdmg
  subprocess.check_call("appdmg appdmg.json dist/CloudSQLProxyMenuBar.dmg",  shell=True)

if __name__ == '__main__': main()
